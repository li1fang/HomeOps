---
- name: Verify required service state
  block:
    - name: Verify service state and enablement
      ansible.builtin.assert:
        that:
          - "required_service.unit in ansible_facts.services"
          - "ansible_facts.services[required_service.unit].state == 'running'"
          - >-
            (ansible_facts.services[required_service.unit].status is defined
             and ansible_facts.services[required_service.unit].status == 'enabled')
            or (ansible_facts.services[required_service.unit].enabled is defined
                and ansible_facts.services[required_service.unit].enabled)
        fail_msg: >-
          Service {{ required_service.friendly }} must be running and enabled on controller {{ inventory_hostname }}
        success_msg: >-
          Service {{ required_service.friendly }} running and enabled on controller {{ inventory_hostname }}
  rescue:
    - name: Collect service journal after assertion failure
      ansible.builtin.command:
        cmd: "journalctl -u {{ required_service.unit }} --no-pager -n 200"
      register: service_journal_capture
      changed_when: false
      failed_when: false

    - name: Write service journal artifact
      ansible.builtin.copy:
        dest: "{{ artifacts_dir }}/{{ inventory_hostname }}_{{ required_service.unit }}_journal.log"
        content: |-
          {{ service_journal_capture.stdout | default('') }}
          {% if service_journal_capture.stderr is defined and service_journal_capture.stderr | length > 0 %}
          --- stderr ---
          {{ service_journal_capture.stderr }}
          {% endif %}
        mode: "0644"
      delegate_to: localhost

    - name: Fail after required service assertion failure
      ansible.builtin.fail:
        msg: >-
          {{ ansible_failed_result.msg | default('Service verification failed; see service journal artifact for details.') }}
