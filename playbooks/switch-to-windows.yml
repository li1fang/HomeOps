 codex/review-ansible-playbooks-for-compatibility-issues-ggqmkz
- name: Linux â†’ Windows (efibootmgr BootNext), orchestrated from controllers
 main
  hosts: controllers
  gather_facts: false
  vars:
    win_host: ws-01-win
    linux_host: ws-01-linux

  tasks:
 codex/review-ansible-playbooks-for-compatibility-issues-ggqmkz

    - name: Trigger to-windows.sh on Linux host
      ansible.builtin.shell: |
        bash -lc "/home/{{ hostvars[linux_host].ansible_user }}/ops/to-windows.sh"

      delegate_to: "{{ linux_host }}"
      async: 30
      poll: 0
      changed_when: false

    - name: Wait for Linux SSH to drop
      ansible.builtin.wait_for:
        host: "{{ hostvars[linux_host].ansible_host }}"
        port: 22
        state: drained
        timeout: 240
      delegate_to: localhost

 codex/review-ansible-playbooks-for-compatibility-issues-q8bq6c
    - name: Wait for Windows SSH to appear (first window)
      ansible.builtin.wait_for:
        host: "{{ hostvars[win_host].ansible_host }}"
        port: 22
        delay: 10
        timeout: 300
      register: wait1
      failed_when: false
      delegate_to: localhost

    - name: Wake-on-LAN fallback if Windows still down
      when: wait1 is failed or (wait1 is defined and (wait1.failed | default(False)))
      block:
        - name: Send magic packet
          community.general.wakeonlan:
            mac: "{{ hostvars[win_host].wol_mac | default(omit) }}"
            broadcast: "{{ hostvars[win_host].wol_broadcast | default('255.255.255.255') }}"
          delegate_to: localhost

        - name: Wait for Windows SSH to appear (second window after WoL)
          ansible.builtin.wait_for:
            host: "{{ hostvars[win_host].ansible_host }}"
            port: 22
            delay: 5
            timeout: 300
          delegate_to: localhost

    - name: Confirm Windows reachable (whoami)
 codex/review-ansible-playbooks-for-compatibility-issues-ggqmkz
 main
      ansible.windows.win_command: whoami
      delegate_to: "{{ win_host }}"
