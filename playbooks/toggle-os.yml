---
# 目的：智能判断 ws-01 当前运行在哪个 OS，并触发相反方向的切换
# 约定：
#   - Linux 主机：ws-01-linux
#   - Windows 主机：ws-01-win
#   - 切换剧本已存在：playbooks/switch-to-linux.yml / playbooks/switch-to-windows.yml

- name: Smartly Toggle OS on ws-01 (decide & switch)
  hosts: controllers
  gather_facts: false

  vars:
    repo_root: "{{ playbook_dir }}/.."   # 仓库根，便于子 playbook chdir

  tasks:
    # ------ Probe Linux ------
    - name: Probe ws-01-linux via ping (expect 'pong')
      ansible.builtin.ping:
      delegate_to: ws-01-linux
      register: linux_probe
      ignore_errors: true

    - name: Set linux_is_online fact
      ansible.builtin.set_fact:
        linux_is_online: "{{ (linux_probe is defined) and (linux_probe.ping | default('') == 'pong') }}"

    # ------ Probe Windows ------
    - name: Probe ws-01-win via 'hostname' (SSH-friendly)
      ansible.builtin.command:
        cmd: hostname
      delegate_to: ws-01-win
      register: win_probe
      ignore_errors: true

    - name: Set windows_is_online fact
      ansible.builtin.set_fact:
        windows_is_online: "{{ (win_probe is defined) and (win_probe.rc | default(1) == 0) }}"

    - name: Show probe summary
      ansible.builtin.debug:
        msg:
          linux_is_online: "{{ linux_is_online | default(false) }}"
          windows_is_online: "{{ windows_is_online | default(false) }}"

    # ------ Decide & Switch ------
    - name: Decide and Switch to Linux (Windows online, Linux offline)
      ansible.builtin.command:
        cmd: ansible-playbook -i inventory/hosts.yaml playbooks/switch-to-linux.yml
        chdir: "{{ repo_root }}"
      when: (windows_is_online | default(false)) and not (linux_is_online | default(false))
      changed_when: true

    - name: Decide and Switch to Windows (Linux online, Windows offline)
      ansible.builtin.command:
        cmd: ansible-playbook -i inventory/hosts.yaml playbooks/switch-to-windows.yml
        chdir: "{{ repo_root }}"
      when: (linux_is_online | default(false)) and not (windows_is_online | default(false))
      changed_when: true

    # ------ Report edge cases ------
    - name: Both offline → fail
      ansible.builtin.fail:
        msg: "Both ws-01-linux and ws-01-win are unreachable. Please check machine power / network."
      when: not (linux_is_online | default(false)) and not (windows_is_online | default(false))

    - name: Both online → no-op
      ansible.builtin.debug:
        msg: "Both ws-01-linux and ws-01-win appear online. Not toggling (no-op)."
      when: (linux_is_online | default(false)) and (windows_is_online | default(false))
